// Generated by CoffeeScript 1.6.3
var Iciba, parseString, pkg, request;

request = require('request');

parseString = require('xml2js').parseString;

pkg = require('../package.json');

Iciba = (function() {
  function Iciba(key) {
    this.key = key;
    this.version = pkg.version;
  }

  return Iciba;

})();

Iciba.prototype.get = function(word, fn) {
  var url;
  url = "http://dict-co.iciba.com/api/dictionary.php?w=" + word + "&key=" + this.key;
  return request.get(url, function(err, res, xml) {
    if (err) {
      return fn('API request fail');
    }
    return parseString(xml, function(err, res) {
      var dict, example, index, result, spell, type, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
      if (err) {
        return fn('XML parse fail');
      }
      dict = res.dict;
      result = {
        word: word,
        spells: [],
        examples: [],
        translations: []
      };
      _ref = (dict != null ? dict.ps : void 0) || [];
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        spell = _ref[index];
        result.spells.push({
          text: "[" + spell + "]",
          mp3: dict.pron[index]
        });
      }
      _ref1 = (dict != null ? dict.sent : void 0) || [];
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        example = _ref1[_j];
        result.examples.push({
          en: example.orig[0].trim(),
          cn: example.trans[0].trim()
        });
      }
      _ref2 = (dict != null ? dict.pos : void 0) || [];
      for (index = _k = 0, _len2 = _ref2.length; _k < _len2; index = ++_k) {
        type = _ref2[index];
        result.translations.push({
          type: type,
          desc: dict.acceptation[index].trim()
        });
      }
      return fn(null, result);
    });
  });
};

module.exports = Iciba;
